[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/components/StyledSpinComponent/StyledSpinStyles.js",
    "content": "exports.centeredSpin = {\n  textAlign: \"center\",\n  background: {\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 0.05,\n  },\n  borderRadius: 4,\n  marginBottom: 20,\n  padding: 30,\n  margin: 20,\n};\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/components/StyledSpinComponent/StyledSpinStyles.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "file",
    "name": "src/components/SuccessComponent/Success.js",
    "content": "",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/components/SuccessComponent/Success.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "src/containers/HomeComponent/SearchFormStyles.js",
    "content": "exports.formItemLayout = {\n  labelCol: { xs: { span: 24 }, sm: { span: 6 } },\n  wrapperCol: { xs: { span: 24 }, sm: { span: 12 } },\n};\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/containers/HomeComponent/SearchFormStyles.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "file",
    "name": "src/containers/RegisterComponent/RegisterStyles.js",
    "content": "exports.formItemLayout = {\n  labelCol: { xs: { span: 24 }, sm: { span: 6 } },\n  wrapperCol: { xs: { span: 24 }, sm: { span: 12 } },\n};\n\nexports.tailFormItemLayout = {\n  wrapperCol: { xs: { span: 24, offset: 0 }, sm: { span: 16, offset: 6 } },\n};\n\nexports.centeredDiv = {\n  textAlign: \"center\",\n  background: {\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 0.05,\n  },\n  borderRadius: 4,\n  marginBottom: 20,\n  padding: 30,\n  margin: 20,\n};\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/containers/RegisterComponent/RegisterStyles.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4,
    "kind": "file",
    "name": "src/core/contexts/user.js",
    "content": "import React from \"react\";\n\nconst UserContext = React.createContext();\nexport default UserContext;\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/contexts/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "UserContext",
    "memberof": "src/core/contexts/user.js",
    "static": true,
    "longname": "src/core/contexts/user.js~UserContext",
    "access": null,
    "export": true,
    "importPath": "cw.frontend/src/core/contexts/user.js",
    "importStyle": "UserContext",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 6,
    "kind": "file",
    "name": "src/core/utilities/authRules.js",
    "content": "exports.emailRules = [\n  { type: \"email\", message: \"The input is not valid E-mail!\" },\n  { required: true, message: \"Please input your E-mail!\" },\n];\n\nexports.passwordRules = [\n  { required: true, min: 6, message: \"Please input your password!\" },\n];\n\nexports.signUpCodeRules = [\n  { required: true, message: \"Please provide a sign-up code!\" },\n];\n\nexports.confirmRules = [\n  { required: true, message: \"Please confirm your password!\" },\n  ({ getFieldValue }) => ({\n    validator(rule, value) {\n      try {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n        throw new Error(\"Password confirmation failed.\");\n      } catch (err) {\n        return Promise.reject(err);\n      }\n    },\n  }),\n];\n\nexports.usernameRules = [\n  { required: true, message: \"Please input your username!\", whitespace: true },\n];\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/utilities/authRules.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "src/core/utilities/generalStyles.js",
    "content": "exports.formItemLayout = {\n  labelCol: { xs: { span: 24 }, sm: { span: 6 } },\n  wrapperCol: { xs: { span: 24 }, sm: { span: 12 } },\n};\n\nexports.tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nexports.cardLayout = {\n  borderRadius: 10,\n  marginTop: 10,\n};\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/utilities/generalStyles.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "file",
    "name": "src/core/utilities/messageFormProps.js",
    "content": "exports.emailRules = [\n  { type: \"email\", message: \"The input is not valid E-mail!\" },\n  { required: true, message: \"Please input your E-mail!\" },\n];\n\nexports.textRules = [\n  {\n    required: true,\n    message: \"Please write a messsage to send!\",\n  },\n];\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/utilities/messageFormProps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/core/utilities/propertiesFormProps.js",
    "content": "exports.titleProps = {\n  rules: [\n    {\n      type: \"string\",\n      required: true,\n      message: \"Please provide a description!\",\n    },\n  ],\n  tooltip: {\n    title: \"What would you like to be the title of your listing?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.descriptionProps = {\n  rules: [\n    {\n      type: \"string\",\n      required: true,\n      message: \"Please provide a description!\",\n    },\n  ],\n  tooltip: {\n    title: \"What about your property makes it special?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.locationProps = {\n  rules: [\n    { type: \"string\", required: true, message: \"Please specify a location!\" },\n  ],\n  tooltip: {\n    title: \"Where is your property located?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.askingPriceProps = {\n  rules: [{ type: \"string\" }],\n  tooltip: {\n    title: \"What is your asking price for this property?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.categoryProps = {\n  rules: [\n    { type: \"string\", required: true, message: \"Please specify a category!\" },\n  ],\n  tooltip: {\n    title: \"Which of the following categories best describes your property?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.featuresProps = {\n  rules: [\n    {\n      type: \"array\",\n      required: true,\n      message: \"Please specify at least one feature!\",\n    },\n  ],\n  tooltip: {\n    title: \"Which of the following features best describe your property?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.visibleProps = {\n  rules: [{ type: \"boolean\" }],\n  tooltip: {\n    title: \"Would you like other users to be able to see this listing?\",\n  },\n};\n\nexports.underOfferProps = {\n  rules: [{ type: \"boolean\" }],\n  tooltip: {\n    title: \"Are you open to receiving offers on this property?\",\n    placement: \"leftBottom\",\n  },\n};\n\nexports.highPriorityProps = {\n  rules: [{ type: \"boolean\" }],\n  tooltip: {\n    title:\n      \"Would you like this property to take precedence over others in your portfolio?\",\n    placement: \"leftBottom\",\n  },\n};\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/utilities/propertiesFormProps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "file",
    "name": "src/core/utilities/requestHandlers.js",
    "content": "/**\n * Check the HTTP status code and resolve or reject accordingly\n * @param {object} response - the Response() object to process\n */\nexport function status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  return new Promise((resolve, reject) => reject(response));\n}\n\n/**\n * Extract the response body for further processing\n * @param {object} response - the Response() object to process\n */\nexport function json(response) {\n  return response.json();\n}\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/core/utilities/requestHandlers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "status",
    "memberof": "src/core/utilities/requestHandlers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utilities/requestHandlers.js~status",
    "access": null,
    "export": true,
    "importPath": "cw.frontend/src/core/utilities/requestHandlers.js",
    "importStyle": "{status}",
    "description": "Check the HTTP status code and resolve or reject accordingly",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "the Response() object to process"
      }
    ]
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "json",
    "memberof": "src/core/utilities/requestHandlers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utilities/requestHandlers.js~json",
    "access": null,
    "export": true,
    "importPath": "cw.frontend/src/core/utilities/requestHandlers.js",
    "importStyle": "{json}",
    "description": "Extract the response body for further processing",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "the Response() object to process"
      }
    ]
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "src/serviceWorker.js",
    "content": "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/serviceWorker.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "isLocalhost",
    "memberof": "src/serviceWorker.js",
    "static": true,
    "longname": "src/serviceWorker.js~isLocalhost",
    "access": null,
    "export": false,
    "importPath": "cw.frontend/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 15,
    "kind": "function",
    "name": "register",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~register",
    "access": null,
    "export": true,
    "importPath": "cw.frontend/src/serviceWorker.js",
    "importStyle": "{register}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "registerValidSW",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~registerValidSW",
    "access": null,
    "export": false,
    "importPath": "cw.frontend/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 17,
    "kind": "function",
    "name": "checkValidServiceWorker",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~checkValidServiceWorker",
    "access": null,
    "export": false,
    "importPath": "cw.frontend/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "unregister",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~unregister",
    "access": null,
    "export": true,
    "importPath": "cw.frontend/src/serviceWorker.js",
    "importStyle": "{unregister}",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/setupTests.js",
    "content": "// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport \"@testing-library/jest-dom/extend-expect\";\n\nglobal.matchMedia =\n  global.matchMedia ||\n  function () {\n    return {\n      matches: false,\n      addListener() {},\n      removeListener() {},\n    };\n  };\n",
    "static": true,
    "longname": "/home/codio/workspace/cw.frontend/src/setupTests.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# cw.frontend\n\nFront-end for 304CEM coursework.\n",
    "longname": "/home/codio/workspace/cw.frontend/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"cw.frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@ant-design/icons\": \"^4.3.0\",\n    \"@testing-library/jest-dom\": \"^4.2.4\",\n    \"@testing-library/react\": \"^9.5.0\",\n    \"@testing-library/user-event\": \"^7.2.1\",\n    \"antd\": \"^4.9.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"prop-types\": \"^15.7.2\",\n    \"react\": \"^16.13.1\",\n    \"react-dom\": \"^16.13.1\",\n    \"react-error-overlay\": \"^6.0.8\",\n    \"react-router-dom\": \"^5.2.0\",\n    \"react-scripts\": \"^4.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"node --max-old-space-size=500 node_modules/.bin/react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\",\n    \"prettier\": \"npx prettier --write .\",\n    \"lint\": \"node_modules/.bin/eslint .\",\n    \"lintfix\": \"node_modules/.bin/eslint . --fix\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"react-app\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"babel-eslint\": \"^10.1.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^7.16.0\",\n    \"eslint-config-airbnb\": \"^18.2.1\",\n    \"eslint-config-prettier\": \"^7.1.0\",\n    \"eslint-plugin-import\": \"^2.22.1\",\n    \"eslint-plugin-jsx-a11y\": \"^6.4.1\",\n    \"eslint-plugin-prettier\": \"^3.3.0\",\n    \"eslint-plugin-react\": \"^7.21.5\",\n    \"eslint-plugin-react-hooks\": \"^4.2.0\",\n    \"eslint-plugin-testing-library\": \"^3.10.1\",\n    \"prettier\": \"^2.2.1\"\n  }\n}\n",
    "longname": "/home/codio/workspace/cw.frontend/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]